// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/gigi214/services_example/store_cmds/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	StoreEndpoint     endpoint.Endpoint
	GetFromToEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.StoreCmdsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetFromToEndpoint: MakeGetFromToEndpoint(s),
		StoreEndpoint:     MakeStoreEndpoint(s),
	}
	for _, m := range mdw["Store"] {
		eps.StoreEndpoint = m(eps.StoreEndpoint)
	}
	for _, m := range mdw["GetFromTo"] {
		eps.GetFromToEndpoint = m(eps.GetFromToEndpoint)
	}
	return eps
}
